import { Note } from "@prisma/client";
import { log } from "console";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import ItemNoteOfListShowNotes from "~/components/blimblom";
import Button from "~/components/button";

import { api } from "~/utils/api";

export default function Home() {
  const [note, setNote] = useState<Note>();

  const [inputTitle, setTitle] = useState<string>('')
  const [inputContent, setContent] = useState<string>('')
  const [haveData, setHaveData] = useState<String>('')

  const router = useRouter()

  const { mutate: noteDB } = api.create.createNote.useMutation();
  const {data: notesData, isLoading} = api.create.listNotes.useQuery()

  if (isLoading) return <p>loading...</p>

  const nome = 'Pedro'

  useEffect(() => {
    // Verifica se estamos no ambiente do navegador antes de usar localStorage
    if (typeof window !== 'undefined') {
      localStorage.setItem('teste', 'estou fazendo um teste');
      localStorage.setItem('segundoTeste', 'mais um testes')

      const dataLocalStorage = localStorage.getItem('teste');
      setHaveData(dataLocalStorage || ''); // Atualiza o estado haveData
    }
  }, []); 

  useEffect(() => {
    // Aqui, haveData será atualizado com os dados de localStorage
    if (haveData) {
      console.log('Há dados no localStorage:', haveData);
    } else {
      console.log('Não há dados no localStorage');
    }
  }, [haveData]); // Executa sempre que haveData for alterado

  const handleNavegacao = () => {
    router.push('/createNote');
  };

  // let haveData: string | null = null;

  // useEffect(() => {
  //   // Verifica se estamos no ambiente do navegador antes de usar localStorage
  //   if (typeof localStorage !== 'undefined') {
  //     localStorage.setItem('teste', 'estou fazendo um teste')
      
  //     let dataLocalStorage = localStorage.getItem('teste')

  //     setHaveData(dataLocalStorage)


  //     if (!haveData) {
  //       console.log('Não há dados no localStorage');
  //       // Você pode fazer o que precisar fazer quando não há dados no localStorage aqui
  //     } else {
  //       console.log('Há dados no localStorage');
  //       // Você pode fazer o que precisar fazer quando há dados no localStorage aqui
  //     }
  //   }
  // }, []); 
  // console.log(haveData);
  
  // if (typeof localStorage !== 'undefined') {
  //   haveData = localStorage.getItem('teste');
  // }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-screen">
        
          {
            
            !haveData ? (
              <>
                <div id="all_Content" className="flex flex-col justify-center items-center h-full w-full bg-blue-500">
                  <div>
                    <h1 className="bg-green-500">You don't have any note</h1>
                    <Button onClick={handleNavegacao}/>
                  </div>
                </div>
              </>
            ) : (
            <>
              <div id="all_Content" className="flex flex-col justify-start items-center h-full w-full bg-blue-500">

                <h1 className="bg-red-500 mt-8">Personal Notes</h1>

                <div id="space_Notes" className="flex mt-3 bg-gray-500 mx-8">
      
                  <div id="side_Menu" className="w-3/3 bg-white flex flex-col justify-center items-end">
                    <ul>
                      {notesData?.map((note) => (
                        <ItemNoteOfListShowNotes key={note.id} title={note.title} content={note.content}/>
                      ))}
                    </ul>
                    <Button onClick={handleNavegacao}/>
                  </div>
                </div>
              </div>
  
              {/* <div id="space_Write_Note" className="w-2/3">
                <div id="save_Or_Delete">
                  <button type='button'
                    onClick={
                      () => {
                        noteDB({
                          title: inputTitle,
                          content: inputContent
                        })
                      }
                    } 
                  >Save the note</button>
                  <span>...</span>
                </div>
                <input type="text" className="bg-blue-500"
                  value={inputTitle}
                  onChange={(e) => setTitle(e.target.value)}
                />
                <textarea className="bg-green-500"
                  value={inputContent}
                  onChange={(e) => setContent(e.target.value)}
                ></textarea>
              </div> */}
            
            </>)
          }
      </main>
      {/* <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        
         <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">First Steps →</h3>
              <div className="text-lg">
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">Documentation →</h3>
              <div className="text-lg">
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
          <p className="text-2xl text-white">
            {hello.data ? hello.data.greeting : "Loading tRPC query..."}
          </p>
        </div> 
      </main> */}
    </>
  );
}
